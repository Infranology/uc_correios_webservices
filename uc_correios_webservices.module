<?php

/**
 * @file
 * Shipping quote module that defines a shipping rate for each product base on
 * weight and origin/destiny zip/postal code
 *
 * Coded by Wanderson S. Reis aka wasare [http://www.ospath.com]
 * Modified by Infranology
 */

// API.
include 'api/correioswebservice.php';

/**
 * Drupal Hooks.
 */

/**
 * Implements hook_menu().
 */
function uc_correios_webservices_menu() {
  $items = array();

  $items['admin/store/settings/quotes/methods/correios_webservices'] = array(
    'title' => 'Correios Webservices',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_correios_webservices_admin_settings'),
    'access arguments' => array('administer correios quotes'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function uc_correios_webservices_init() {
  if ($_GET['q'] == 'admin/store/settings/quotes/methods/correios_webservices') {
    drupal_add_css(drupal_get_path('module', 'uc_correios_webservices')
      . '/css/admin-styles.css', 'module', 'all');
    drupal_add_js(drupal_get_path('module', 'uc_correios_webservices')
      . '/js/admin-scripts.js', 'module', 'header');
  }
}

/**
 * Implements hook_perm().
 */
function uc_correios_webservices_perm() {
  return array('administer correios quotes');
}

/**
 * Implements hook_ca_predicate().
 *
 * Connect the correios_webservices action and event.
 */
function uc_correios_webservices_ca_predicate() {
  $enabled = variable_get('uc_quote_enabled', array('correios_webservices' => TRUE));

  $predicates = array(
    'uc_correios_webservices_get_quote' => array(
      '#title' => t('Shipping quotes via correios services'),
      '#trigger' => 'get_quote_from_correios_webservices',
      '#class' => 'uc_correios_webservices',
      '#status' => $enabled['correios_webservices'],
      '#actions' => array(
        array(
          '#name' => 'uc_quote_action_get_quote',
          '#title' => t('Fetch a shipping quote'),
          '#argument_map' => array(
            'order' => 'order',
            'method' => 'method',
          ),
        ),
      ),
    ),
  );
  return $predicates;
}

/**
 * Übercart Hooks.
 */

/**
 * Implements Ubercart's hook_shipping_type().
 */
function uc_correios_webservices_shipping_type() {
  $weight = variable_get('uc_quote_type_weight', array('small_package' => 0));

  $types = array();
  $types['small_package'] = array(
    'id' => 'small_package',
    'title' => t('Small packages'),
    'weight' => $weight['small_package'],
  );

  return $types;
}

/**
 * Implements Übercart's hook_shipping_method().
 */
function uc_correios_webservices_shipping_method() {
  $methods = array();

  $enabled = variable_get('uc_quote_enabled', array('correios_webservices' => TRUE));
  $weight = variable_get('uc_quote_method_weight', array('correios_webservices' => 0));
  $methods['correios_webservices'] = array(
    'id' => 'correios_webservices',
    'module' => 'uc_correios_webservices',
    'title' => t('Correios Quotes'),
    'quote' => array(
      'type' => 'small_package',
      'callback' => 'uc_correios_webservices_quote',
      'accessorials' => array(
        '41106' => t('PAC'),
        '40010' => t('SEDEX'),
        '40215' => t('SEDEX 10'),
        '40290' => t('SEDEX Hoje'),
        '41068' => t('PAC'),
        '40096' => t('SEDEX'),
        '81019' => t('e-SEDEX'),
      ),
    ),
    'weight' => $weight['correios_webservices'],
    'enabled' => $enabled['correios_webservices'],
  );

  return $methods;
}

/**
 * Menu Callbacks.
 */

/**
 * Configure the store default shipping rate.
 */
function uc_correios_webservices_admin_settings() {
  $form = array();

  $form['uc_correios_webservices_general'] = array(
    '#type' => 'fieldset',
    '#title' => t('Correios Webservices Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_contract'] = array(
    '#type' => 'select',
    '#title' => t('Contract type'),
    '#description' => t('Select the type of contract with the Correios.'),
    '#default_value' => variable_get('uc_correios_webservices_contract', 0),
    '#options' => array(
      0 => t('No contract'),
      1 => t('With contract'),
    ),
    '#required' => TRUE,
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_without_contract_services'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Services'),
    '#description' => t('Select the kinds of shipping services will be avaliable for customers.'),
    '#default_value' => variable_get('uc_correios_webservices_without_contract_services', uc_correios_webservices_without_contract_services()),
    '#options' => uc_correios_webservices_without_contract_services(),
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#size' => 20,
    '#description' => t('Type your Correios username.'),
    '#default_value' => variable_get('uc_correios_webservices_username', ''),
    '#required' => FALSE,
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#size' => 20,
    '#description' => t('Type your Correios password.'),
    '#default_value' => variable_get('uc_correios_webservices_password', ''),
    '#required' => FALSE,
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_with_contract_services'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Services'),
    '#description' => t('Select the kinds of shipping services will be avaliable for costumers.'),
    '#default_value' => variable_get('uc_correios_webservices_with_contract_services', ''),
    '#options' => array(
      '41068' => t('PAC'),
      '40096' => t('SEDEX'),
      '40215' => t('SEDEX 10'),
      '40290' => t('SEDEX Hoje'),
      '81019' => t('e-SEDEX'),
    ),
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_display_time_estimate'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show shipping time estimate'),
    '#description' => t('The shipping time estimate will be displayed when avaliable.'),
    '#default_value' => variable_get('uc_correios_webservices_display_time_estimate', FALSE),
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_send_declared_value'] = array(
    '#type' => 'checkbox',
    '#title' => t('Send order total price as "declared value"'),
    '#description' => t('The total order price will be sent as "declared value" when supported by webservice, this option increases the shipping cost.'),
    '#default_value' => variable_get('uc_correios_webservices_send_declared_value', FALSE),
  );

  $form['uc_correios_webservices_general']['uc_correios_webservices_display_branding'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display logos'),
    '#description' => t('PAC, SEDEX, SEDEX 10, SEDEX Hoje and e-SEDEX logos.'),
    '#default_value' => variable_get('uc_correios_webservices_display_branding', TRUE),
  );

  $form['uc_correios_webservices_min'] = array(
    '#type' => 'fieldset',
    '#title' => t('Minimum size of the package setup'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['uc_correios_webservices_min']['uc_correios_webservices_min_length'] = array(
    '#type' => 'textfield',
    '#title' => t('Package length'),
    '#size' => 6,
    '#maxlength' => 8,
    '#description' => t("Package length range 16 to 60 centimeters."),
    '#default_value' => variable_get('uc_correios_webservices_min_length', 16),
    '#required' => TRUE,
  );

  $form['uc_correios_webservices_min']['uc_correios_webservices_min_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Package height'),
    '#size' => 6,
    '#maxlength' => 8,
    '#description' => t("Package height range 2 to 60 centimeters."),
    '#default_value' => variable_get('uc_correios_webservices_min_height', 2),
    '#required' => TRUE,
  );

  $form['uc_correios_webservices_min']['uc_correios_webservices_min_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Package width'),
    '#size' => 6,
    '#maxlength' => 8,
    '#description' => t("Package width range 11 to 60 centimeters."),
    '#default_value' => variable_get('uc_correios_webservices_min_width', 11),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Module Functions.
 */

/**
 * List of delivery services.
 *
 * @return array
 *   Return an array of possible Correios services without contract.
 */
function uc_correios_webservices_without_contract_services() {
  return array(
    '41106' => t('PAC'),
    '40010' => t('SEDEX'),
    '40215' => t('SEDEX 10'),
    '40290' => t('SEDEX Hoje'),
  );
}

/**
 * List the methods of delivery selected.
 *
 * @return string
 *   User login.
 */
function uc_correios_webservices_services() {
  $login = variable_get('uc_correios_webservices_username', NULL);
  $without_login = variable_get('uc_correios_webservices_without_contract_services', uc_correios_webservices_without_contract_services());
  $with_login = variable_get('uc_correios_webservices_with_contract_services', '');

  if ($login != NULL) {
    return $with_login;
  }
  else {
    return $without_login;
  }
}

/**
 * Converts measurements for cm.
 *
 * @param string $length
 *   Length of product.
 * @param string $unit
 *   Measuring unit.
 *
 * @return string
 *   Total length in cm.
 */
function uc_correios_webservices_length_convert($length, $unit) {
  $total = $length * uc_length_conversion($unit, 'cm');

  return $total;
}

/**
 * Converts weight for kg.
 *
 * @param string $weight
 *   Weigth of product.
 * @param string $qty
 *   Quantity of products.
 * @param string $unit
 *   Measuring unit.
 *
 * @return string
 *   Total weight in kg.
 */
function uc_correios_webservices_weight_convert($weight, $qty, $unit) {
  $total = $weight * $qty * uc_weight_conversion($unit, 'kg');

  return $total;
}

/**
 * Converts number format for declared value.
 *
 * @param string $value
 *   Total purchase.
 *
 * @return string
 *   Declared value.
 */
function uc_correios_webservices_declared_value($value) {
  $key = variable_get('uc_correios_webservices_send_declared_value', FALSE);

  switch ($key) {
    case 1:
      $value = number_format($value, 2, '.', '');
    return check_plain($value);
    break;

    default:
    return '0';
    break;
  }
}

/**
 * Defines the total cubage.
 *
 * @param array $height
 *   Height of all products.
 * @param array $width
 *   Width of all products.
 * @param array $length
 *   Length of all products.
 *
 * @return array
 *   Total cubage.
 */
function uc_correios_webservices_cubage($height, $width, $length) {

  // Sets the cubage of all products.
  $all_produtcs = array();
  for ($i = 0; $i < count($height); $i++) {
    $all_produtcs[$i] = $height[$i] * $width[$i] * $length[$i];
  }

  // Total cubage.
  $cubage_total = '';
  foreach ($all_produtcs as $value) {
    $cubage_total += $value;
  }

  // Defines the greatest.
  $find = array(
    'height' => max($height),
    'width' => max($width),
    'length' => max($length),
  );
  $greatest = array_search(max($find), $find);

  // Dividing the value of scaling of all products.
  // With the measured value of greater.
  $division = $cubage_total / max($find);

  // Total square root.
  $root = round(sqrt($division), 1);

  // Sets the final cubage.
  $cubage = array();
  switch ($greatest) {
    case 'height':
      $cubage = array(
        'height' => max($height),
        'width' => $root,
        'length' => $root,
      );
      break;

    case 'width':
      $cubage = array(
        'height' => $root,
        'width' => max($width),
        'length' => $root,
      );
      break;

    case 'length':
      $cubage = array(
        'height' => $root,
        'width' => $root,
        'length' => max($length),
      );
      break;

    default:
      break;
  }

  return $cubage;
}

/**
 * Test values to meet the minimum measure.
 *
 * @param array $height
 *   Height of all products.
 * @param array $width
 *   Width of all products.
 * @param array $length
 *   Length of all products.
 *
 * @return array
 *   Cubage corrected.
 */
function uc_correios_webservices_test_min_cubage($height, $width, $length) {
  // Get min values.
  $min_length = check_plain(variable_get('uc_correios_webservices_min_length', 16));
  $min_height = check_plain(variable_get('uc_correios_webservices_min_height', 2));
  $min_width = check_plain(variable_get('uc_correios_webservices_min_width', 11));

  // Test height.
  if ($height < $min_height) {
    $height = $min_height;
  }

  // Test width.
  if ($width < $min_width) {
    $width = $min_width;
  }

  // Test length.
  if ($length < $min_length) {
    $length = $min_length;
  }

  // Return the values.
  return array(
    'height' => $height,
    'width' => $width,
    'length' => $length,
  );

}

/**
 * Built array with height, width, length, weight and price for products.
 *
 * @param array $products
 *   Array with cart products.
 *
 * @return array
 *   Return array with products information.
 */
function uc_correios_webservices_products($products) {
  $height = array();
  $width = array();
  $length = array();
  $weight = '';
  $price = '';
  $i = 0;

  foreach ($products as $product) {
    $qty = $product->qty;
    $weight_units = $product->weight_units;
    $length_units = $product->length_units;

    // Product weight.
    $height[$i] = uc_correios_webservices_length_convert($product->height, $length_units);
    $width[$i] = uc_correios_webservices_length_convert($product->width, $length_units);
    $length[$i] = uc_correios_webservices_length_convert($product->length, $length_units);

    // Repeats the value in the array as the amount.
    if ($qty > 1) {
      $s = $i;

      for ($n = 1; $n < $qty; $n++) {
        $s++;
        $height[$s] = $height[$i];
        $width[$s] = $width[$i];
        $length[$s] = $length[$i];
      }

      $i = $s;
    }
    $i++;

    // Product weight.
    $weight += uc_correios_webservices_weight_convert($product->weight, $qty, $weight_units);

    // Product price.
    $price += $product->price * $product->qty;
  }

  // Sets cubage.
  $cubage = uc_correios_webservices_cubage($height, $width, $length);
  $cubage_total = uc_correios_webservices_test_min_cubage($cubage['height'], $cubage['width'], $cubage['length']);

  // Rounding up values.
  $weight = round($weight, 1);

  return array(
    'height' => $cubage_total['height'],
    'width' => $cubage_total['width'],
    'length' => $cubage_total['length'],
    'weight' => $weight,
    'price' => $price,
  );
}

/**
 * Get origin postal code.
 *
 * @return string
 *   string with origin post code.
 */
function uc_correios_webservices_origin_postal_code() {
  $code = variable_get('uc_quote_store_default_address', '');

  return check_plain($code->postal_code);
}

/**
 * Get user postal code.
 *
 * @param array $details
 *   Get shipping details.
 *
 * @return string
 *   Return user postal code.
 */
function uc_correios_webservices_destiny_postal_code($details) {
  $code = (object) $details;
  $code = check_plain(preg_replace('/[[:^digit:]]/', '', $code->postal_code));

  return $code;
}

/**
 * Return errors from correios to user.
 *
 * @param int $code
 *   Message code.
 * @param string $msg
 *   Message text.
 *
 * @return mixed
 *   Message for user.
 */
function uc_correios_webservices_user_error_messages($code, $msg) {
  $before = '<span style="color:#e00;font-size:small">';
  $after = '</span>';

  $errors = array(
    // CEP de destino inválido.
    '-3',
    // Peso excedido.
    '-4',
    // Serviço indisponível para o trecho informado.
    '-6',
    // Precificação indisponível para o trecho informado.
    '-10',
    // Sistema temporariamente fora do ar. Favor tentar mais tarde.
    '-33',
    // Erro ao calcular a tarifa.
    '-888',
    // Localidade de destino não abrange o serviço informado.
    '007',
    // Serviço indisponível para o trecho informado.
    '008',
    // CEP final pertencente a Área de Risco.
    // A entrega será realizada, temporariamente, na agência mais próxima do
    // endereço do destinatário.
    '010',
    // Serviço indisponível, tente mais tarde.
    '7',
  );

  if (in_array($code, $errors)) {
    return $before . $msg . $after;
  }
  else {
    return 0;
  }
}

/**
 * Display logos.
 *
 * @param string $key
 *   Service number.
 *
 * @return string
 *   show image for service.
 */
function uc_correios_webservices_services_branding($key) {
  $path = base_path() . drupal_get_path('module', 'uc_correios_webservices') . '/images/';
  $method = uc_correios_webservices_shipping_method();
  $name = t('@method', array('@method' => $method['correios_webservices']['quote']['accessorials'][$key]));
  $service = '';

  switch ($key) {
    case '41106':
      $service = 'pac';
      break;

    case '40010':
      $service = 'sedex';
      break;

    case '40215':
      $service = 'sedex-10';
      break;

    case '40290':
      $service = 'sedex-hoje';
      break;

    case '41068':
      $service = 'pac';
      break;

    case '40096':
      $service = 'sedex';
      break;

    case '81019':
      $service = 'e-sedex';
      break;

    default:
      $service = 'sedex';
      break;
  }

  return '<img style="margin:0 5px 0 10px;" class="uc_correios_webservices_img" src="' . $path . $service . '.png" alt="' . $name . '" /><br />';
}

/**
 * Function to calculate the cost of delivery.
 *
 * @param array $products
 *   Cart contents.
 * @param array $details
 *   Order details other than product information.
 *
 * @return array
 *   Object containing rate, error, and debugging information.
 */
function uc_correios_webservices_quote($products, $details) {

  $product = uc_correios_webservices_products($products);

  $cod_empresa = check_plain(variable_get('uc_correios_webservices_username', ''));
  $senha = check_plain(variable_get('uc_correios_webservices_password', ''));

  $cep_origem = uc_correios_webservices_origin_postal_code();
  $cep_destino = uc_correios_webservices_destiny_postal_code($details);

  $altura = check_plain($product['height']);
  $largura = check_plain($product['width']);
  $comprimento = check_plain($product['length']);
  $diametro = '0';

  $peso = check_plain($product['weight']);

  $services = uc_correios_webservices_services();

  $valor_declarado = uc_correios_webservices_declared_value($product['price']);

  $retorno = 'object';

  $quotes = array();
  $method = uc_correios_webservices_shipping_method();

  foreach ($services as $key => $service) {

    if ($service != 0) {

      $display_branding = variable_get('uc_correios_webservices_display_branding', TRUE);
      $delivery = uc_correios_webservices_correios_api($cod_empresa, $senha, $cep_origem, $cep_destino, $altura, $largura, $diametro, $comprimento, $peso, $service, $valor_declarado, $retorno);

      $delivery_name = t('@method', array('@method' => $method['correios_webservices']['quote']['accessorials'][$key]));
      $delivery_price = str_replace(',', '.', check_plain($delivery->Valor));
      $delivery_date = check_plain($delivery->PrazoEntrega);
      $delivery_error_code = check_plain($delivery->Erro);
      $delivery_error_msg = check_plain($delivery->MsgErro);

      // Rate.
      $quotes[$key]['rate'] = $delivery_price;

      // Format.
      $quotes[$key]['format'] = uc_currency_format($delivery_price);

      if ($display_branding == TRUE) {
        $quotes[$key]['option_label'] = uc_correios_webservices_services_branding($key) . '<span style="margin-left:29px;font-weight:bold;">' . $delivery_name . '</span>';
      }
      else {
        $quotes[$key]['option_label'] = '<span style="font-weight:bold;">' . $delivery_name . '</span>';
      }

      // Display time estimate in label.
      if (variable_get('uc_correios_webservices_display_time_estimate', FALSE) == TRUE && $delivery_error_code == 0) {
        $quotes[$key]['option_label'] .= ' <span style="font-size:smaller;">' . format_plural($delivery_date, '(Estimated delivery in 1 business day)', '(Estimated delivery in @count business days)') . '</span>';
      }

      // Error reports.
      if ($delivery_error_code != 0) {
        $delivery_user_error_msg = uc_correios_webservices_user_error_messages($delivery_error_code, $delivery_error_msg);
        $delivery_error_log = t('error: !error_code - !error_msg', array('!error_code' => $delivery_error_code, '!error_msg' => $delivery_error_msg));

        // Error records in the Drupal.
        watchdog('correios', 'error: !error_code - !error_msg', array('!error_code' => $delivery_error_code, '!error_msg' => $delivery_error_msg), WATCHDOG_ERROR);

        // Errors validation.
        if ($delivery_user_error_msg != 0) {
          $quotes[$key]['error'] = $delivery_user_error_msg;
          unset($quotes[$key]['rate'], $quotes[$key]['rate']);
        }
        else {
          unset($quotes[$key]);
        }
      }
    }

  }

  return $quotes;
}
