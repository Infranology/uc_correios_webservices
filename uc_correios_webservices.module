<?php

/**
 * @file
 * Shipping quote module that defines a shipping rate for each product base on weight and origin/destiny zip/postal code
 *
 * Coded by Wanderson S. Reis aka wasare [http://www.ospath.com]
 *
 */

// API
include('api/correioswebservice.php');

// Drupal Hooks

/**
 * Implementation of hook_menu().
 */
function uc_correios_webservices_menu() {
    $items = array();

    $items['admin/store/settings/quotes/methods/correios_webservices'] = array(
        'title' => 'Correios Webservices',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('uc_correios_webservices_admin_settings'),
        'access arguments' => array('configure quotes'),
        'type' => MENU_LOCAL_TASK
    );

    $items['correios_webservices/estimating/quotes'] = array(
        'page callback' => 'uc_correios_webservices_estimating_quotes',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK
    );

    return $items;
}

/**
 * Implementation of hook_init().
 */
function uc_correios_webservices_init() {

    global $conf;
    $conf['i18n_variables'][] = 'uc_correios_webservices_estimating_by_product_message';
}

/**
 * Implementation of hook_perm().
 */
function uc_correios_webservices_perm() {
    return array('administer correios quotes');
}

/**
 *
 * Implementation of hook_ca_predicate().
 *
 * Connect the correios_webservices action and event.
 */
function uc_correios_webservices_ca_predicate() {
    $enabled = variable_get('uc_quote_enabled', array('correios_webservices' => TRUE));

    $predicates = array(
        'uc_correios_webservices_get_quote' => array(
            '#title' => t('Shipping quotes via correios services'),
            '#trigger' => 'get_quote_from_correios_webservices',
            '#class' => 'uc_correios_webservices',
            '#status' => $enabled['correios_webservices'],
            '#actions' => array(
                array(
                    '#name' => 'uc_quote_action_get_quote',
                    '#title' => t('Fetch a shipping quote'),
                    '#argument_map' => array(
                        'order' => 'order',
                        'method' => 'method'
                    )
                )
            )
        )
    );
    return $predicates;
}

/**
 * Implementation of hook_form_alter().
 */
function uc_correios_webservices_form_alter(&$form, &$form_state, $form_id) {
    if ($form_id == 'uc_cart_pane_quotes') {
        $form['delivery_country']['#type'] = 'hidden';
        $form['delivery_zone']['#type'] = 'hidden';
    }

    if (strpos($form_id, 'uc_product_add_to_cart_form_') === 0 && variable_get('uc_correios_webservices_estimanting_by_product_enabled', FALSE)) {

        if (arg(0) == 'node' && is_numeric(arg(1))) {

            $nid = arg(1);

            $form['correios_webservices'] = array(
                '#type' => 'fieldset',
                '#title' => t('Estimating shipping cost'),
                '#collapsible' => FALSE,
                '#collapsed' => FALSE
            );

            $form['correios_webservices']['nid'] = array(
                '#type' => 'hidden',
                '#value' => $nid
            );

            $form['correios_webservices']['uc_correios_webservices_postal_code'] = array(
                '#type' => 'textfield',
                '#title' => t('Enter your postal code'),
                '#size' => 10,
                '#maxlength' => 8,
                '#required' => FALSE
            );

            $form['correios_webservices']['uc_correios_webservices_get_rate'] = array(
                '#type' => 'button',
                '#value' => t('Get Correios Quotes'),
                '#ahah' => array(
                    'event' => 'click',
                    'path' => 'correios_webservices/estimating/quotes',
                    'wrapper' => 'correios-quotes-estimated',
                    'effect' => 'fade',
                    'progress' => array(
                        'type' => 'bar',
                        'message' => t('Receiving quotes:')
                    ),
                    '#suffix' => '<br />'
                ),
            );

            $form['correios_webservices']['uc_correios_webservices_find_postal_code'] = array(
                '#value' => l(t('Find my Postal Code'), 'http://www.correios.com.br/servicos/cep/cep_loc_log.cfm', array('attributes' => array('target' => '_blank'))),
            );

            $form['correios_webservices']['estimated_cost'] = array('#type' => 'markup',
                '#value' => '<div id="correios-quotes-estimated"></div>',
                '#prefix' => '<br /><br />'
            );
        }
    }
}

// Übercart Hooks

/**
 * Implementation of Ubercart's hook_shipping_type().
 */
function uc_correios_webservices_shipping_type() {
    $weight = variable_get('uc_quote_type_weight', array('small_package' => 0));

    $types = array();
    $types['small_package'] = array(
        'id' => 'small_package',
        'title' => t('Small packages'),
        'weight' => $weight['small_package']
    );

    return $types;
}

/**
 * Implementation of Übercart's hook_shipping_method().
 */
function uc_correios_webservices_shipping_method() {
    $methods = array();

    $enabled = variable_get('uc_quote_enabled', array('correios_webservices' => TRUE));
    $weight = variable_get('uc_quote_method_weight', array('correios_webservices' => 0));
    $methods['correios_webservices'] = array(
        'id' => 'correios_webservices',
        'module' => 'uc_correios_webservices',
        'title' => t('Correios Quotes'),
        'quote' => array(
            'type' => 'small_package',
            'callback' => 'uc_correios_webservices_quote',
            'accessorials' => array(
                '41106' => t('PAC'),
                '40010' => t('SEDEX'),
                '40215' => t('SEDEX 10'),
                '40290' => t('SEDEX Hoje'),
                '41068' => t('PAC'),  // with contract
                '40096' => t('SEDEX'), // with contract
                '81019' => t('e-SEDEX')  // with contract
            )
        ),
        'weight' => $weight['correios_webservices'],
        'enabled' => $enabled['correios_webservices']
    );

    return $methods;
}

// Menu Callbacks

/**
 * Configure the store default shipping rate.
 */
function uc_correios_webservices_admin_settings() {

    $form = array();

    $form['uc_correios_webservices_general'] = array(
        '#type' => 'fieldset',
        '#title' => t('Correios Webservices Settings'),
        '#collapsible' => FALSE,
        '#collapsed' => FALSE
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_contract'] = array(
        '#type' => 'select',
        '#title' => t('Contract type'),
        '#description' => t('ADICIONAR TEXTO DE AJUDA'),
        '#default_value' => variable_get('uc_correios_webservices_contract', 0),
        '#options' => array(
            0 => t('No contract'),
            1 => t('With contract')
        ),
        '#required' => TRUE
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_without_contract_services'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Services'),
        '#description' => t('Select the kinds of shipping services will be avaliable for costumers.'),
        '#default_value' => variable_get('uc_correios_webservices_without_contract_services', uc_correios_webservices_without_contract_services()),
        '#options' => uc_correios_webservices_without_contract_services()
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_username'] = array(
        '#type' => 'textfield',
        '#title' => t('Username'),
        '#size' => 20,
        '#description' => t('ADICIONAR TEXTO DE AJUDA'),
        '#default_value' => variable_get('uc_correios_webservices_username', ''),
        '#required' => FALSE
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_password'] = array(
        '#type' => 'textfield',
        '#title' => t('Password'),
        '#size' => 20,
        '#description' => t('ADICIONAR TEXTO DE AJUDA'),
        '#default_value' => variable_get('uc_correios_webservices_password', ''),
        '#required' => FALSE
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_with_contract_services'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Services'),
        '#description' => t('Select the kinds of shipping services will be avaliable for costumers.'),
        '#default_value' => variable_get('uc_correios_webservices_with_contract_services', ''),
        '#options' => array(
            '41068' => t('PAC'),
            '40096' => t('SEDEX'),
            '40215' => t('SEDEX 10'),
            '40290' => t('SEDEX Hoje'),
            '81019' => t('e-SEDEX')
        )
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_display_time_estimate'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show shipping time estimate'),
        '#description' => t('The shipping time estimate will be displayed when avaliable.'),
        '#default_value' => variable_get('uc_correios_webservices_display_time_estimate', FALSE)
    );

    $form['uc_correios_webservices_general']['uc_correios_webservices_send_declared_value'] = array(
        '#type' => 'checkbox',
        '#title' => t('Send order total price as "declared value"'),
        '#description' => t('The total order price will be sent as "declared value" when supported by webservice, this option increases the shipping cost.'),
        '#default_value' => variable_get('uc_correios_webservices_send_declared_value', FALSE)
    );

    $form['uc_correios_webservices_pac'] = array(
        '#type' => 'fieldset',
        '#title' => t('Correios PAC setup'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE
    );

    $form['uc_correios_webservices_pac']['uc_correios_webservices_pac_length'] = array(
        '#type' => 'textfield',
        '#title' => t('Package length'),
        '#size' => 6,
        '#maxlength' => 8,
        '#description' => t("Package length range 16 to 60 centimeters."),
        '#default_value' => variable_get('uc_correios_webservices_pac_length', 16),
        '#required' => TRUE
    );

    $form['uc_correios_webservices_pac']['uc_correios_webservices_pac_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Package height'),
        '#size' => 6,
        '#maxlength' => 8,
        '#description' => t("Package height range 2 to 60 centimeters."),
        '#default_value' => variable_get('uc_correios_webservices_pac_height', 2),
        '#required' => TRUE
    );

    $form['uc_correios_webservices_pac']['uc_correios_webservices_pac_depth'] = array(
        '#type' => 'textfield',
        '#title' => t('Package depth'),
        '#size' => 6,
        '#maxlength' => 8,
        '#description' => t("Package depth range 5 to 60 centimeters."),
        '#default_value' => variable_get('uc_correios_webservices_pac_depth', 11),
        '#required' => TRUE
    );

    $form['uc_correios_webservices_estimanting_quotes_by_product'] = array(
        '#type' => 'fieldset',
        '#title' => t('Estimating shipping cost on product page'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE
    );

    $form['uc_correios_webservices_estimanting_quotes_by_product']['uc_correios_webservices_estimanting_by_product_enabled'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable estimate shipping'),
        '#description' => t('Show a block to estimate shipping cost on each product page.'),
        '#default_value' => variable_get('uc_correios_webservices_estimanting_by_product_enabled', FALSE)
    );

    $form['uc_correios_webservices_estimanting_quotes_by_product']['uc_correios_webservices_estimating_by_product_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Message'),
        '#description' => t('A custom message displayed when a estimative shipping cost was received on product page.'),
        '#default_value' => variable_get('uc_correios_webservices_estimating_by_product_message', t('The shipping cost estimate bellow refers only to this item by buying more items the shipping cost may be proportionately cheaper or even free. <br /> <strong> See the terms of the store and the minimum value for orders. </ strong>'))
    );

    return system_settings_form($form);
}

// Module Functions

/**
 * Debug function
 */
function myTrace($msg) {
    $filename = "/Users/claudiosanches/dev/www/debug.txt";

    ob_start(); //Start buffering
    print_r($msg); //print the result
    $output = ob_get_contents(); //get the result from buffer
    ob_end_clean(); //close buffer

    $h = fopen($filename, 'w'); //open a file
    fwrite($h, $output . "\n \n \n"); //write the output text
    fclose($h); //close file

}

/**
 * List of delivery services by Correios without contract
 *
 * @return array
 */
function uc_correios_webservices_without_contract_services() {
    return array(
        '41106' => t('PAC'),
        '40010' => t('SEDEX'),
        '40215' => t('SEDEX 10'),
        '40290' => t('SEDEX Hoje')
    );
}

/**
 * List the methods of delivery selected
 *
 * @return array
 */
function uc_correios_webservices_services() {
    $login = variable_get('uc_correios_webservices_username', NULL);
    $without_login = variable_get('uc_correios_webservices_without_contract_services', uc_correios_webservices_without_contract_services());
    $with_login = variable_get('uc_correios_webservices_with_contract_services', '');
    
    
    if ($login != NULL) {
        return $with_login;
    }
    else {
        return $without_login;
    }
}

/**
 * List of names of services
 * 
 * @param type $service 
 */

function uc_correios_webservices_services_labels($service) {
    
}

/**
 *
 * @param type $length
 *    Length of product
 * @param type $qty
 *    Quantity of products
 * @param type $unit
 *    Measuring unit
 * @return
 *    Total length in cm
 */
function uc_correios_webservices_length_convert($length, $qty, $unit) {
    $total = $length * $qty * uc_length_conversion($unit, 'cm');

    return $total;
}

/**
 *
 * @param type $weight
 *    Weigth of product
 * @param type $qty
 *    Quantity of products
 * @param type $unit
 *    Measuring unit
 * @return
 *    Total weight in kg
 */

function uc_correios_webservices_weight_convert($weight, $qty, $unit) {
    $total = $weight * $qty * uc_weight_conversion($unit, 'kg');

    return $total;
}

/**
 *
 * @param type $value
 *    Total purchase
 * @return
 *    Declared value
 */
function uc_correios_webservice_declared_value($value) {
    $key = variable_get('uc_correios_webservices_send_declared_value', FALSE);

    switch ($key) :
        case 1 :
            $value = number_format($value, 2, ',', '.');
            return $value;
            break;
        default :
            return '0';
            break;
    endswitch;

}

/**
 *
 * @param type $products
 *    Array with cart products
 * @return array
 *    Return array with products information
 */

function uc_correios_webservices_products($products) {
    $height = '';
    $width  = '';
    $length = '';
    $weight = '';
    $price  = '';

    foreach($products as $product) :

        $qty          = $product->qty;
        $weight_units = $product->weight_units;
        $length_units = $product->length_units;

        // product weight
        $height += uc_correios_webservices_length_convert($product->height, $qty, $length_units);
        $width  += uc_correios_webservices_length_convert($product->width,  $qty, $length_units);
        $length += uc_correios_webservices_length_convert($product->length, $qty, $length_units);

        // product weight
        $weight += uc_correios_webservices_weight_convert($product->weight, $qty, $weight_units);

        // product price
        $price  += $product->price * $product->qty;

    endforeach;

    // Rounding up values
    $height = ceil($height);
    $width  = ceil($width);
    $length = ceil($length);
    $weight = ceil($weight);

    return array(
        'height' => $height,
        'width'  => $width,
        'length' => $length,
        'weight' => $weight,
        'price'  => $price,
    );
}

/**
 *
 * @return type
 */
function uc_correios_webservices_origin_postal_code() {
    $code = variable_get('uc_quote_store_default_address', '');

    return $code->postal_code;
}

/**
 *
 * @param type $details
 *   Get shipping details
 * @return type
 *   Return user postal code
 */
function uc_correios_webservices_destiny_postal_code($details) {
    $code  = (object) $details;
    $code = check_plain(preg_replace('/[[:^digit:]]/', '', $code->postal_code));

    return $code;
}

/**
 *
 * @param  $products
 *    Array of cart contents.
 * @param  $details
 *    Order details other than product information.
 * @return mixed
 *    object containing rate, error, and debugging information
 */
function uc_correios_webservices_quote($products, $details) {

    $product         = uc_correios_webservices_products($products);

    $cod_empresa     = variable_get('uc_correios_webservices_username', '');
    $senha           = variable_get('uc_correios_webservices_password', '');

    $cep_origem      = uc_correios_webservices_origin_postal_code();
    $cep_destino     = uc_correios_webservices_destiny_postal_code($details);

    $altura          = $product['height'];
    $largura         = $product['width'];
    $comprimento     = $product['length'];
    $diametro        = 0;

    $peso            = $product['weight'];

    $services        = uc_correios_webservices_services();

    $valor_declarado = uc_correios_webservice_declared_value($product['price']);

    $retorno         = 'object';

    $quotes = array();
    $method = uc_correios_webservices_shipping_method();
    
    foreach ($services as $key => $service) {
        
        if ($service != 0) {

            $servico = $service;
            $delivery = calculo_frete_correios_api($cod_empresa, $senha, $cep_origem, $cep_destino, $altura, $largura, $diametro, $comprimento, $peso, $servico, $valor_declarado, $retorno);
            
            $delivery_price = str_replace(',', '.', check_plain($delivery->Valor));
            $delivery_date = check_plain($delivery->PrazoEntrega);
            
            // Rate
            $quotes[$key]['rate'] = $delivery_price;
            
            // Format
            $quotes[$key]['format'] = uc_currency_format($delivery_price);
            
            
            //$quotes[$key]['option_label'] = '<img class="correios_logo" src="' . base_path() . drupal_get_path('module', 'uc_correios_webservices') . '/images/correios.gif" /> ';
            
            $quotes[$key]['option_label'] .= t('@method', array('@method' => $method['correios_webservices']['quote']['accessorials'][$key]));
            
            // Display time estimate in label
            if (variable_get('uc_correios_webservices_display_time_estimate', FALSE) == TRUE) {
                $quotes[$key]['option_label'] .= ' <span style="font-size:smaller;">' . format_plural($delivery_date, '(Estimated delivery in 1 business day)', '(Estimated delivery in @count business days)') . '</span>';
            }
            
            // Error
            //if ()
            
            
            //myTrace(array($quotes, $method));
        }
        
    }
    
    return $quotes;
    
    

/*
    $xml = '';
    $quotes = array();
    $method = uc_correios_webservices_shipping_method();
    $weight_unit = variable_get('uc_weight_unit', NULL);

    $addresses = array((array) variable_get('uc_quote_store_default_address', new stdClass()));
    $orig = (object) $addresses[0];
    // Origin Postal code (CEP) - Warehouse postal code
    $cep_origem = $orig->postal_code;
    //$ceporigem = variable_get('uc_store_postal_code', NULL); // Origin Postal code (CEP)

    $shipment = new stdClass();

    // Use uc_cart_get_contents to get cart items, because $products array won't work
    $items = uc_cart_get_contents(uc_cart_get_id(), 'rebuild');

    foreach ($products as $product) {
        $node = node_load($product->nid);
        // Calcula o peso dos produtos de acordo com a unidade de peso utilizada
        $shipment->weight += $product->weight * $product->qty * uc_weight_conversion($node->weight_units, 'kg');
        // Calcula o valor dos produtos de acordo com a quantidade
        $shipment->price += $product->price * $product->qty;
    }

    $cep_destino = (object) $details;
    $cep_destino = check_plain(preg_replace('/[[:^digit:]]/', '', $cep_destino->postal_code));
    $valor_declarado = (variable_get('uc_correios_webservices_send_declared_value', FALSE)) ? number_format($shipment->price, 2, ',', '.') : 0;
    $peso_final = $shipment->weight;

    $default_engine = variable_get('uc_correios_webservices_default_engine', 0);

    foreach (array_keys(array_filter(variable_get('uc_correios_webservices_services', array()))) as $correios_service) {

        if ($default_engine == 1) {
            switch ($correios_service) {
                case '41106':
                    $fetch_service = 2;
                    break;
                case '40010':
                    $fetch_service = 1;
                    break;
            }
        }
        else
            $fetch_service = $correios_service;

        $service_url = _uc_correios_webservices_service_url($peso_final, $fetch_service, $cep_destino, $cep_origem, $valor_declarado);

        $resp = uc_correios_webservices_shipping_quote($service_url, 1);

        $xml = @simplexml_load_string(trim($resp->data));

        if (user_access('configure quotes') && variable_get('uc_quote_display_debug', FALSE)) {
            $quotes[$correios_service]['debug'] .= ' <br /><br /> ' . htmlentities((string) $resp->data);
        }

        if (!is_object($xml) || !$xml) {
            $quotes[$correios_service]['error'] = t('Error getting correios shipping quotes.');
        } else {

            $error_msg = $error_no = '';

            switch ($default_engine) {
                case '0':
                    $error_msg = check_plain((string) $xml->cServico->MsgErro);
                    $error_no = check_plain((string) $xml->cServico->Erro);
                    $preco_postal = str_replace(',', '.', check_plain($xml->cServico->Valor));
                    $prazo_entrega = check_plain($xml->cServico->PrazoEntrega);
                    $prazo_entrega = format_plural($prazo_entrega, '(Estimated delivery in 1 business day)', '(Estimated delivery in @count business days)');
                    break;
                case '1':
                    $error_msg = check_plain($xml->status);
                    $preco_postal_pac = (int) check_plain($xml->valor_pac);
                    $preco_postal_sedex = (int) check_plain($xml->valor_sedex);
                    if ($preco_postal_pac > 0)
                        $preco_postal = check_plain($xml->valor_pac);
                    if ($preco_postal_sedex > 0)
                        $preco_postal = check_plain($xml->valor_sedex);
                    $prazo_entrega = '';
                    break;
            }

            if (empty($error_msg) || $error_no == 0 || $error_msg == 'OK') {
                $quotes[$correios_service]['rate'] = $preco_postal;
                $quotes[$correios_service]['estimated_delivery'] = $prazo_entrega;
            } else {
                $quotes[$correios_service]['error'] .= '   ' . $error_msg . ' (' . t('error:') . ' ' . $error_no . ')';
            }
        }
    }

    foreach ($quotes as $key => $quote) {
        if (isset($quote['rate'])) {
            $quotes[$key]['format'] = uc_currency_format($quote['rate']);
        }

        if (isset($quote['error']) || !empty($quote['error'])) {
            $quotes[$key]['error'] = $quote['error'];
            unset($quotes[$key]['rate']);
            unset($quotes[$key]['format']);
        }
        $quotes[$key]['option_label'] = '<img class="correios_logo" src="' . base_path() . drupal_get_path('module', 'uc_correios_webservices') . '/images/correios.gif" /> ';
        $quotes[$key]['option_label'] .= t('@method', array('@method' => $method['correios_webservices']['quote']['accessorials'][$key]));
        if (variable_get('uc_correios_webservices_display_time_estimate', FALSE) == TRUE)
            $quotes[$key]['option_label'] .= ' <span style="font-size:smaller;">' . $quote['estimated_delivery'] . '</span>';
    }

    uasort($quotes, 'uc_quote_price_sort');

    return $quotes;

*/
}

function uc_correios_webservices_estimating_quotes() {

    $output = '<br /><label class="option">';
    $output .= variable_get('uc_correios_webservices_estimating_by_product_message', '');
    $output .= '</label><br />';

    $node = node_load($_POST['nid']);
    $product = new stdClass();
    $product->nid = $_POST['nid'];
    $product->qty = $_POST['qty'];
    $product->price = $node->sell_price;
    $product->weight = $node->weight;

    $correios_webservices = uc_correios_webservices_quote(array($product), array('postal_code' => $_POST['uc_correios_webservices_postal_code'], 'country' => $node->shipping_address->country, 'zone' => ''));

    foreach ($correios_webservices as $quote) {
        $output .= '<br /><label class="option">';
        $output .= $quote['option_label'] . ' ';
        if (isset($quote['error'])) {
            $output .= $quote['error'];
        } else {
            if (isset($quote['format']) && isset($quote['format'])) {
                $output .= $quote['format'];
            }
        }
        $output .= '</label><br />';
    }

    drupal_json(array('status' => TRUE, 'data' => $output));
    exit();
}
